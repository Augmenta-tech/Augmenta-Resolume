/*{
  "DESCRIPTION": "Swirl FX",
  "CREDIT": "by IMIMOT (ported from https://github.com/BradLarson/GPUImage)",
  "CATEGORIES": [
    "Distortion Effect"
  ],
  "INPUTS": [
	{
      "NAME": "augmentaData",
      "TYPE": "image"
    },
	{
      "NAME": "augmentaMaxNumObjects",
      "TYPE": "float",
      "DEFAULT": 20,
      "MIN": 1,
      "MAX": 20
    },
    {
      "NAME": "inputImage",
      "TYPE": "image"
    },
    {
      "NAME": "radius",
      "TYPE": "float",
      "DEFAULT": 0.5,
      "MIN": 0,
      "MAX": 1
    },
    {
      "NAME": "angle",
      "TYPE": "float",
      "DEFAULT": 1,
      "MIN": -1,
      "MAX": 1
    }
  ]
}*/

vec2 getSwirledPos(vec2 pos, float rad)
{
     vec2 textureCoordinate = isf_FragNormCoord;
     vec2 textureCoordinateToUse = textureCoordinate;
     
      float dist = distance(pos, textureCoordinate);
     if (dist < radius)
     {
         textureCoordinateToUse -= pos;
         float percent = (radius - dist) / radius;
         float theta = percent * percent * angle * 8.0;
         float s = sin(theta);
         float c = cos(theta);
         textureCoordinateToUse = vec2(dot(textureCoordinateToUse, vec2(c, -s)), dot(textureCoordinateToUse, vec2(s, c)));
         textureCoordinateToUse += pos;
     }
     
     return textureCoordinateToUse;
}

void main()
{
       // Init
    vec4 col = vec4(1,0,0,1);
     
	vec2 targetPos = vec2(0,0);
	
	float totalWeight = 0;
    for(int i=0;i<augmentaMaxNumObjects;++i) 
    {
	
	  float uvX = (i+.5)/augmentaMaxNumObjects;
      vec4 point = texture2D(augmentaData, vec2(uvX,0));
	 
		point.y = 1-point.y;
	  if(point.x == 0 || point.y == 0 || point.w == 0) continue;
	
      vec2 sp = getSwirledPos(point.xy, radius * point.w);
      targetPos += sp * vec2(point.w);
	  totalWeight += point.w;
    }     
	
     if(totalWeight >0) targetPos = targetPos / vec2(totalWeight);
	 else targetPos = isf_FragNormCoord;
	
     vec4 swirlCol = IMG_NORM_PIXEL(inputImage, targetPos);
     gl_FragColor = swirlCol;  
  
}

 