// Augmenta dots example shader
// by Augmenta (https://www.augmenta.tech)
// Ben Kuperberg, Thomas Weissgerber and David-Alexandre Chanel

/*{
  "CREDIT": "Joseph Fiola",
  "DESCRIPTION": "",
  "CATEGORIES": [
    "Generator"
  ],
  "INPUTS": [
    {
      "NAME": "size",
      "TYPE": "float",
      "DEFAULT": 0.35,
      "MIN": 0,
      "MAX": 1
    },
    {
      "NAME": "edgeBlur",
      "TYPE": "float",
      "DEFAULT": 0.5,
      "MIN": 0,
      "MAX": 1
    },
    {
    "NAME" : "color",
      "TYPE" : "color",
      "DEFAULT" : [
        1,
        1,
        1,
        1.0
      ]
    },
    {
      "NAME": "drawGhosts",
      "TYPE" : "bool",
      "DEFAULT" : false
    },
	{
      "NAME": "augmentaNumPoints",
      "TYPE": "float",
      "DEFAULT": 20,
      "MIN": 0,
      "MAX": 100
    },
    {
      "NAME": "augmentaData",
      "TYPE": "image"
    }
  ]
}*/

vec4 drawCircle(vec2 pos, float st, float weight, float radius, float edgeBlur)
{
    vec4 result = vec4(0,0,0,0);
    vec2 uv = gl_FragCoord.xy / RENDERSIZE.xy;

    float ratio = RENDERSIZE.x / RENDERSIZE.y;
    uv -= pos.x;
    uv.x *= ratio;
    uv += pos.x;

    float dist = length(uv - pos);
    
    float look;
    look = abs(dist -size);

    vec4 tColor = color;
    if(drawGhosts && st >= .4) tColor = vec4(.5,.5,.5,1);

    float factor = (1.0 - smoothstep(radius, (radius+edgeBlur),  look));
    result = factor * tColor *  weight;

   return result;
}

void main()
{
  // Init
  vec4 colorOut = vec4(0.0,0.0,0.0,0.0);
	
  for(float i=0;i<100;++i)
  {
    if(i > augmentaNumPoints) break;
	
    // Get the point
	  float uvX = (i+.5)/augmentaNumPoints;
    vec4 point = texture2D(augmentaData, vec2(uvX,0));
    // Draw
	  if(point.x > 0 && point.y > 0) colorOut += drawCircle(point.xy, point.z, point.w, size, edgeBlur);
  }
 
  gl_FragColor = colorOut;
}
